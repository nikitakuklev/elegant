CMPLR = ANSI

#RATIONAL = purify
#RATIONAL = quantify
#RATIONAL = purecov
ifdef RATIONAL
HOST_OPT = NO
ifeq ($(EPICS_VERSION).$(EPICS_REVISION),3.13)
CC = $(RATIONAL) -best-effort $($(ANSI)_$(CMPLR))
CXX = $(RATIONAL) -best-effort $($(CPLUSPLUS)_$(CXXCMPLR))
else 
CC := $(RATIONAL) -best-effort $(CC)
CCC := $(RATIONAL) -best-effort $(CCC)
endif
endif

ifeq ($(CONDOR_COMPILE),1)
ifeq ($(EPICS_VERSION).$(EPICS_REVISION),3.13)
  CC = condor_compile -condor_standalone $($(ANSI)_$(CMPLR)) -DCONDOR_COMPILE 
  CXX = condor_compile -condor_standalone $($(CPLUSPLUS)_$(CXXCMPLR)) -DCONDOR_COMPILE
else
  POSIX_LDLIBS_YES = 
  CC := condor_compile -condor_standalone $(CC) -DCONDOR_COMPILE
  CCC := condor_compile -condor_standalone $(CCC) -DCONDOR_COMPILE
endif
endif

ifdef VALGRIND
HOST_OPT=NO
endif

PRODOAG = elegant sddsemitmeas sddsemitproc madto \
          sddssasefel sddsTouschekInteg ibsEmittance \
          recurseSetup haissinski sddsmatchtwiss \
          sddsanalyzebeam sddsrandmult sddsresdiag

SCRIPTS = elegantRingAnalysis beamLifetimeCalc fin2param elegant2shower shower2elegant

ifeq ($(EPICS_VERSION).$(EPICS_REVISION),3.13)
PROD = $(PRODOAG)
else
PROD_HOST = $(PRODOAG)
endif

#USR_CFLAGS = 	-I../../../../../epics/extensions/src/SDDS/include \
#		$(ZLIB_INC) \
#		-I$(EPICS_EXTENSIONS_INCLUDE) \
#		-DIEEE_MATH \
#		$(ZLIB_CFLAG)
USR_CFLAGS = 	-I$(EPICS_EXTENSIONS)/src/SDDS/include -I$(EPICS_EXTENSIONS_INCLUDE) \
		-DIEEE_MATH -DzLib

USR_CFLAGS_DEFAULT += -DUNIX -DMINIMIZE_MEMORY

ifeq ($(LYNCEANTECH),1) 
        USR_CFLAGS += -DLYNCEANTECH
endif
USR_CFLAGS_WIN32 = -nil-

ifdef WIN32
USR_LIBS = 	mdbcommon matlib fftpack SDDS1 \
		rpnlib mdbmth namelist mdblib \
		meschach z fdlibm
z_DIR = $(EPICS_EXTENSIONS_LIB)
else
USR_LIBS = 	mdbcommon matlib fftpack SDDS1 \
		rpnlib mdbmth namelist mdblib \
		meschach
SYS_PROD_LIBS_DEFAULT += z
SYS_PROD_LIBS_solaris += z curses rt
endif

MAKE = make
ifeq ($(HOST_ARCH),solaris)
MAKE = gnumake
ACC_DEP_CFLAGS = -KPIC -v
CCC_DEP_CFLAGS = -KPIC -v
GCC_DEP_CFLAGS += -D__EXTENSIONS__
endif

SDDS1_DIR = $(EPICS_EXTENSIONS_LIB)
namelist_DIR = $(EPICS_EXTENSIONS_LIB)
fftpack_DIR = $(EPICS_EXTENSIONS_LIB)
mdbmth_DIR = $(EPICS_EXTENSIONS_LIB)
matlib_DIR = $(EPICS_EXTENSIONS_LIB)
mdblib_DIR = $(EPICS_EXTENSIONS_LIB)
mdbcommon_DIR = $(EPICS_EXTENSIONS_LIB)
rpnlib_DIR = $(EPICS_EXTENSIONS_LIB)
meschach_DIR = $(EPICS_EXTENSIONS_LIB)
fdlibm_DIR = $(EPICS_EXTENSIONS_LIB)

elegant_SRCS = 	alpha_data.c alpha_matrix.c amplif.c analyze.c aperture_search.c bend_matrix.c \
		bunched_beam.c cfgets.c check_duplic.c chrom.c closed_orbit.c compose_fn.c \
		compute_centroids.c compute_matrices.c concat_beamline.c concat_mat.c counter.c \
		copy_particles.c cormon_stats_output.c correct.c corrector_output.c csbend.c \
		do_tracking.c elegant.c error.c extend_list.c final_props.c find_elem.c floor.c \
		generate_bunch.c get_beamline.c kicker.c kick_poly.c kick_sbend.c \
		limit_amplitudes.c link_date.c link_elements.c load_parameters.c lorentz.c mad_parse.c \
		malign_mat.c matrix_output.c matrix.c matter.c motion.c multipole.c \
		orbtraj_output.c optimize.c output_magnets.c pepper_pot.c phase_reference.c \
		print_line.c quad_matrix.c ramp_momentum.c ramped_rfca.c response.c rfmode.c \
		run_rpnexpr.c sample.c sdds_beam.c sdds_support.c simple_rfca.c  subprocess.c \
		tune.c tilt_matrices.c trace.c track_data.c track_ramp.c track_rf.c trfmode.c \
		ztransverse.c twiss.c vary.c zlongit.c SReffects.c mod_rfca.c fitTraces.c \
		ibs_tracking.c zibs.c wake.c taylorSeries.c trwake.c circles.c tubend.c sasefelmx.c \
		sasefel.c alter.c sliceAnalysis.c divideElements.c transmuteElements.c \
		frfmode.c ftrfmode.c tfeedback.c engeCoef.c lsc.c frequencyMap.c \
		GWigSymplecticPass.c gwig.c

sddsemitproc_SRCS = sddsemitproc.c

sddsemitmeas_SRCS = sddsemitmeas.c

madto_SRCS = 	madto.c sdds_strength_output.c convert_to_parmela.c convert_to_patpet.c convert_to_matlab.c \
		convert_to_patricia.c convert_to_transport.c convert_to_xorbit.c track_data.c \
		get_beamline.c mad_parse.c output_magnets.c cfgets.c trace.c check_duplic.c \
		extend_list.c matrix.c compose_fn.c find_elem.c print_line.c divideElements.c \
		transmuteElements.c convert_to_cosy.c engeCoef.c

sddsrandmult_SRCS = sddsrandmult.c

sddsresdiag_SRCS = sddsresdiag.c

sddssasefel_SRCS = sddssasefel.c sasefelmx.c

sddsTouschekInteg_SRCS = sddsTouschekInteg.c

ibsEmittance_SRCS = ibsEmittance.c zibs.c 

recurseSetup_SRCS = recurseSetup.c

haissinski_SRCS = haissinski.c

sddsmatchtwiss_SRCS = sddsmatchtwiss.c

sddsanalyzebeam_SRCS = sddsanalyzebeam.c

sddsbrightness_SRCS = sddsbrightness.c

fitTraces_CFLAGS = -I../../../../../epics/extensions/src/SDDS/meschach

