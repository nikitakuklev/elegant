#!/bin/sh  
# \
exec oagtclsh "$0" "$@"

set auto_path [linsert $auto_path 0  /usr/local/oag/apps/lib/$env(HOST_ARCH)]
set auto_path [linsert $auto_path 0 /usr/local/oag/lib_patch/$env(HOST_ARCH)]
APSStandardSetup

set usage {usage: brightnessEnvelope -input <filename> -output <filename> -mode {brightness|flux|fluxdensity|centralconeflux} [-hmax <integer>(9)] [-spacing <keV>(0.1)] [-range <min>,<max>] [-breakPages {0|1}(1)]}
set input ""
set output ""
set mode brightness
set hmax 9
set spacing 0.1
set range 0,0
set breakPages 1
# These are kept for backward compatibility
set flux 0
set fluxdensity 0
set args $argv
if {[APSStrictParseArguments {breakPages spacing input output mode flux fluxdensity hmax range}] || ![string length $input] || ![string length $output]} {
    return -code error "$usage"
}
if ![file exists $input] {
    return -code error "not found: $input"
}
if [file exists $output] {
    return -code error "in use: $output"
}
if $flux {
    set mode flux
}
if $fluxdensity {
    set mode fluxdensity
}

set PEMin [lindex [split $range ,] 0]
set PEMax [lindex [split $range ,] 1]
if [expr $PEMin==$PEMax] {
    catch {exec sddsprocess $input -pipe=out \
             "-process=photonEnergy*,min,%sMin" \
             "-process=photonEnergy*,max,%sMax" \
             | sddscollapse -pipe \
             | sddscollect -pipe -collect=prefix=photonEnergy \
             | sddsprocess -pipe -process=photonEnergy,min,PEMin \
             -process=photonEnergy,max,PEMax \
             | sdds2stream -pipe -parameter=PEMin,PEMax} result
    # puts $result
    set PEMin [lindex $result 0]
    set PEMax [lindex $result 1]
}

set fileList ""

set BList ""
set count 0
switch $mode {
    flux {
        set name TotalFlux
        set units "photons/s/0.1%BW"
    }
    fluxdensity {
        set name FluxDensity
        set units "photons/s/mrad\$a2\$n/0.1%BW"
    }
    centralconeflux {
        set name CentralConeFlux
        set units "photons/s/0.1%BW"
    }
    default -
    brightness {
        set name Brightness
        set units "photons/s/mrad\$a2\$n/mm\$a2\$n/0.1%BW"
    }
}

set extraInterpList "K"
set columnList [APSGetSDDSNames -class column -fileName $input]
foreach extraItem {OnAxisPowerDensity TotalPower} {
    if [lsearch -exact $columnList $extraItem]!=-1 {
	lappend extraInterpList $extraItem
    } 
}

for {set h 1} {$h<=$hmax} {incr h 2} {
    set interpList $extraInterpList
    lappend interpList $name$h
    set renameList [list photonEnergy$h=photonEnergy $name$h=$name]
    if [catch {exec sddssort $input -pipe=out -column=photonEnergy$h,incr \
                 | sddsprocess -pipe "-test=column,photonEnergy$h 0 >" \
                 | sddsinterp -pipe \
                 -equispaced=$spacing,$PEMin,$PEMax -below=value=0 -above=value=0 \
                 -column=photonEnergy$h,[join $interpList ,] \
                 | sddsconvert -pipe=in $input.$h -rename=column,[join $renameList ,]} result] {
        break
    } else {
        lappend fileList $input.$h
        incr count
    }
}

eval exec sddscombine $fileList -pipe=out \
    | sddsprocess -pipe "{-define=column,harmonic,i_page 2 * 1 -,type=long}" \
    | sddscombine -pipe -merge \
    | sddssort -pipe -column=photonEnergy,incr -column=$name,incr \
    | sddsbreak -pipe -change=photonEnergy \
    | sddsprocess -pipe -clip=0,1,invert \
    | sddscombine -merge -pipe=in $output.tmp
    
if $breakPages {
    exec sddsbreak $output.tmp $output -change=harmonic
} else {
    file rename $output.tmp $output
}

eval file delete $fileList $output.tmp


