#!/bin/bash 

if [ "$1" = "" ] ; then 
    echo "usage: checkStatus <rootname>"
    exit 1
fi
if [[  ! ( -e $1.all ) && ! ( -e $1.best ) ]] ; then
    echo "no files found"
    exit 1
fi

echo "present time: `date +%F/%T`"
if [ -e $1.all ] ; then
    echo "last update: `ls -l --time-style=+%F/%T  $1.all | token -n=6`"
    echo "total completed runs: `sdds2stream -rows $1.all`"
    echo "rank 1 runs: `sddsprocess $1.best -pipe=out -filter=col,Rank,1,1 | sdds2stream -rows -pipe=in `"
fi
echo "running: `qstat | fgrep $USER | fgrep -i \" r \" | wc -l`"
echo "queued: `qstat | fgrep $USER | fgrep -i \" q \" | wc -l`"

if [ -e $1.best ] ; then
    if [ -e $1.best.last ] ; then 
	sddssort $1.best -pipe=out -col=tLifetime,decr -col=Area1,decr \
	    | sddsprocess -pipe=in $1.best.new -filter=col,Rank,1,1 
	new=`sddsselect $1.best.new $1.best.last -equate=runID -pipe=out -invert | sdds2stream -pipe -rows=bare`
	if [[ $new -eq 0 ]] ; then
	    echo "No new rank=1 solutions ($new)"
	    exit
	fi
	echo "$new new rank=1 solutions"
    fi
fi


if [ -e $1.best ] ; then
    if [ -e $1.best.last ] ; then
	sddsprocess $1.best -pipe=out -filter=col,Rank,1,1 \
	    | sddsselect -pipe $1.best.last -equate=runID \
	    | sddsprocess -pipe=in $1.best1.old "-print=col,New," 
	sddsprocess $1.best -pipe=out -filter=col,Rank,1,1 \
	    | sddsselect -pipe $1.best.last -equate=runID -invert \
	    | sddsprocess -pipe=in $1.best1.new "-print=col,New,*"
	sddscombine $1.best1.old $1.best1.new -pipe=out -merge \
	    | sddssort -pipe -col=tLifetime,decr -col=Area1,decr \
	    | tee $1.best.last \
	    | sddsprocess -pipe -print=col,RunID,%s%d,New,runID \
	    | sddsprintout -pipe=in -col=RunID -col=Rank -col=tLifetime -col=Area1 -col=ChromPenalty -col=ex0Penalty -col=nu? -col=dnu??dp -col=deltaLimitLT -width=180 
    else 
	sddssort $1.best -pipe=out -col=tLifetime,decr -col=Area1,decr \
	    | sddsprocess -pipe -filter=col,Rank,1,1 \
	    | tee $1.best.last \
	    | sddsprintout -pipe=in -col=runID -col=Rank -col=tLifetime -col=Area1 -col=ChromPenalty -col=ex0Penalty -col=nu? -col=dnu??dp -col=deltaLimitLT -width=180 
    fi

    n=`sdds2stream -rows=bare $1.best`
    if [[ $n -lt 12 ]] ; then
	sddsplot -layout=1,2 \
	    -col=runID,Rank $1.sort  -graph=sym -mode=y=log,y=spec \
	    -col=runID,Rank $1.best  -graph=sym,thick=2,subtype=3 -mode=y=log,y=spec \
	    -col=runID,Rank $1.sort  -filter=col,Rank,1,1 -graph=sym,thick=2,subtype=2 -mode=y=log,y=spec \
	    -col=runID,Rank $1.sort  -filter=col,runID,0,0 -graph=sym,subtype=1,thick=2 -mode=y=log,y=spec -end \
	    -col=Area1,tLifetime $1.all -graph=sym \
	    -col=Area1,tLifetime $1.best -graph=sym,thick=2,subtype=3 -topline="`date`" -pointLabel=runName,edit="Z-x/0/i/ /",scale=0.75 \
	    -col=Area1,tLifetime $1.best -graph=sym,thick=2,subtype=2 -filter=col,Rank,1,1 \
	    -col=Area1,tLifetime $1.all -graph=sym,subtype=1,thick=2 -filter=col,runID,0,0
    else
	sddsplot -layout=1,2 \
	    -col=runID,Rank $1.sort  -graph=sym -mode=y=log,y=spec \
	    -col=runID,Rank $1.best  -graph=sym,thick=2,subtype=3 -mode=y=log,y=spec \
	    -col=runID,Rank $1.sort  -filter=col,Rank,1,1 -graph=sym,thick=2,subtype=2 -mode=y=log,y=spec \
	    -col=runID,Rank $1.sort  -filter=col,runID,0,0 -graph=sym,subtype=1,thick=2 -mode=y=log,y=spec -end \
	    -col=Area1,tLifetime $1.all -graph=sym \
	    -col=Area1,tLifetime $1.best -graph=sym,thick=2,subtype=3 -topline="`date`" \
	    -col=Area1,tLifetime $1.best -filter=col,Rank,1,1 -graph=sym,thick=2,vary=subtype,fill -order=spect -split=col=runID \
	    -col=Area1,tLifetime $1.all -graph=sym,subtype=1,thick=2 -filter=col,runID,0,0
    fi
fi
