#!/bin/sh  
# \
exec oagtclsh "$0" "$@"

if {![info exists env(OAG_TOP_DIR)]} { set env(OAG_TOP_DIR) /usr/local }
set auto_path [linsert $auto_path 0  $env(OAG_TOP_DIR)/oag/apps/lib/$env(HOST_ARCH)]

APSStandardSetup

set usage "usage: weightedBunch -twiss <filename> -output <filename> -particles <number> -ex <meters> -ey <meters> -Sdelta <fraction> -St <seconds> -nx <num-sigmas> -ny <num-sigmas> -nz <num-sigmas>\nCreates an input file for tracking in elegant with uniformly distributed particles assigned gaussian weights in the particleID column."
set twiss ""
set output ""
set particles 0
set ex 0
set ey 0
set Sdelta 0
set St 0
set nx 0
set ny 0
set nz 0
set args $argv
if {[APSStrictParseArguments {twiss particles output ex ey Sdelta St nx ny nz}] || ![string length $twiss] || ![string length $output]} {
    return -code error "$usage"
}
if ![file exists $twiss] {
    return -code error "Not found: $twiss"
}
if {[file exists $output]} {
    return -code error "exists: $output"
}
foreach item {ex ey Sdelta St nx ny nz} {
    if [expr [set $item]<=0] {
        puts stderr "$item must be positive"
        puts stderr "$usage"
        exit 1
    }
}

set tmpRoot [APSTmpString]
APSAddToTempFileList $tmpRoot.1 $tmpRoot.2
exec sddsprocess $twiss $tmpRoot.1 -process=beta?,first,%s0 -process=eta*,first,%s0 \
  -process=alpha?,first,%s0 -clip=1,0,invert

exec sddssequence -pipe=out -define=z -sequence=begin=-1,end=1,n=11 | sddsprocess -pipe=in $tmpRoot.2 -define=col,P,1

if [catch {exec sddssampledist $tmpRoot.2 -pipe=out -samples=$particles \
             -column=output=a,factor=$nx,independentVariable=z,df=P \
             -column=output=ap,factor=$nx,independentVariable=z,df=P \
             -column=output=b,factor=$ny,independentVariable=z,df=P \
             -column=output=bp,factor=$ny,independentVariable=z,df=P \
             -column=output=c,factor=$nz,independentVariable=z,df=P \
             -column=output=d,factor=$nz,independentVariable=z,df=P \
             | sddsxref -pipe $tmpRoot.1 -leave=* -transfer=parameter,*0,pCentral \
             | sddsprocess -pipe \
             "-define=column,particleID,a sqr ap sqr +  b sqr + bp sqr +  c sqr +  d sqr + -2 / exp 2 30 pow * 1 + ,type=long" \
	       -process=\[abcd\]*,stand,%sStDev,weight=particleID \
	       "-redefine=col,%s,%s %sStDev /,select=a*" \
	       "-redefine=col,%s,%s %sStDev /,select=b*" \
	       "-redefine=col,%s,%s %sStDev /,select=\[cd\]" \
             "-define=parameter,ex,$ex,units=m" \
             "-define=parameter,ey,$ey,units=m" \
             "-define=parameter,St,$St,units=s" \
             "-define=parameter,Sdelta,$Sdelta" \
             "-define=column,delta,Sdelta c *" \
             "-define=column,t,St d *,units=s" \
             "-define=column,x,a ex betax0 * sqrt *,units=m" \
             "-define=column,xp,ap a alphax0 * - ex betax0 / sqrt * delta etaxp0 * +" \
             "-redefine=column,x,x delta etax0 * +,units=m" \
             "-define=column,y,b ey betay0 * sqrt *,units=m" \
             "-define=column,yp,bp b alphay0 * - ey betay0 / sqrt * delta etayp0 * +" \
             "-redefine=column,y,y delta etay0 * +,units=m" \
             "-define=column,p,delta 1 + pCentral *" \
             | sddsconvert -pipe=in $output \
             -retain=parameter,ex,ey,St,Sdelta \
             -retain=column,x,xp,y,yp,t,p,particleID,a,ap,b,bp,c,d} result] {
        puts stderr "$result"
        exit 1
}


