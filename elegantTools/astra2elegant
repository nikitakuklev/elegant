#!/bin/csh
set nonomatch

#
# astra2elegant:
# converts ASTRA phase space output to elegant input
# M. Borland, ANL/APS
#

if ($#argv != 2) then
    echo "Usage: astra2elegant <input> <output>"
    exit 1
endif

set input = $1
set output = $2

if ( ! -e $input ) then
    echo "Not found: $input"
    exit 1
endif
if ( -e $output ) then
    echo "In use: $output"
    exit 1
endif

plaindata2sdds $input -pipe=out \
    -inputMode=ascii -outputMode=binary -noRowCount \
    -column=x,double,units=m -column=y,double,units=m -column=z,double,units=m \
    -column=px,double,units=eV/c -column=py,double,units=eV/c -column=pz,double,units=eV/c \
    -column=t,double,units=ns -column=q,double,units=nC -column=particleType,short \
    -column=status,short \
  | sddsprocess -pipe=in $output \
    -process=*,first,%sReference -clip=1,0 \
  "-define=column,p,px pxReference + sqr py pyReference + sqr + pz pzReference + sqr + sqrt mev / 1e6 /" \
  "-redefine=column,t0,t 1e9 / chs,units=s" \
  "-redefine=column,t,z p beta.p c_mks * 1e-16 + / chs tReference 1e9 / +,units=s" \
  "-define=column,xp,px pxReference + pz pzReference + 1e-18 + /" \
  "-define=column,yp,py pyReference + pz pzReference + 1e-18 + /" \
  -filter=column,particleType,0.5,1.5 \
  "-filter=column,status,-1.5,5.5" \
  -convert=column,q,C,nC,1e-9 \
  "-process=q,sum,Charge"
