#!/bin/sh  
# \
exec oagtclsh "$0" "$@"

# Compute bremsstrahlung lifetime from momentum aperture statistics

if [info exists $env(OAG_TOP_DIR)] {
    set auto_path [linsert $auto_path 0  $env(OAG_TOP_DIR)/oag/apps/lib/$env(HOST_ARCH)]
} else {
    set auto_path [linsert $auto_path 0  /usr/local/oag/apps/lib/$env(HOST_ARCH)]
}

APSStandardSetup

set allowedNameList [list Min Max Median]
for {set p 5} {$p<=100} {incr p 5} {
    lappend allowedNameList ${p}Percentile
}

set usage {usage: elasticScatteringLifetime -aperture <mmapEnvFile> -name <string>(10Percentile) -output <filename> [-pressure nTorr(1)}
set aperture ""
set name 10Percentile
set output ""
set pressure 2
set args $argv
if {[APSStrictParseArguments {aperture name output pressure}] || ![string length $aperture] || ![string length $output]} {
    return -code error "$usage"
}

if ![file exists $aperture] {
   return -code error "not found: $aperture"
}
if [file exists $output] {
   return -code error "in use: $output"
}
if [lsearch -exact $allowedNameList $name]==-1 {
    return -code error "not valid: $name"
}


set tmpRoot [APSTmpString]

# Gas fractional pressures
set fGas(H2) 0.65
set fGas(H2O) 0.02
set fGas(CH4) 0.07
set fGas(CO) 0.22
set fGas(CO2) 0.04
set fGas(N2) 0.0

# Gas constituents (nAtomTypes=# of types of atoms, Z=nuclear charge, atomCount=# atoms of each type)
set nAtomTypes(H2) 1
set Z(H2,1) 1
set atomCount(H2,1) 2

set nAtomTypes(H2O) 2
set Z(H2O,1) 1
set atomCount(H2O,1) 2
set Z(H2O,2) 6
set atomCount(H2O,2) 1

set nAtomTypes(CH4) 2
set Z(CH4,1) 8
set atomCount(CH4,1) 1
set Z(CH4,2) 1
set atomCount(CH4,2) 4

set nAtomTypes(CO) 2
set Z(CO,1) 8
set atomCount(CO,1) 1
set Z(CO,2) 6
set atomCount(CO,2) 1

set nAtomTypes(CO2) 2
set Z(CO2,1) 8
set atomCount(CO2,1) 1
set Z(CO2,2) 6
set atomCount(CO2,2) 2

set nAtomTypes(N2) 1
set Z(N2,1) 7
set atomCount(N2,1) 2

set PSum 0.0
foreach gas [array names fGas] {
    # Compute sum over gas molecules
    set f $fGas($gas)
    set sum 0.0
    for {set con 1} { $con <= $nAtomTypes($gas) } {incr con} {
        # Sum of count*Z^2*ln(183/Z^(1/3))
        set sum [expr $sum+$Z($gas,$con)*$Z($gas,$con)*$atomCount($gas,$con)*log(183./pow($Z($gas,$con),1./3))]
    }
    set PSum [expr $PSum+$f*$sum]
}
# Convert to Pascals
set PSum [expr 133.3224*1e-9*$PSum*$pressure]

exec sddssort -pipe=out $aperture -column=s -unique \
    | sddsprocess -pipe=in $output \
    "-define=param,c1,4 re_mks sqr * 137 / 4 * 3 / $PSum * c_mks * kb_mks / 298 /" \
    -process=s,max,sMax \
    "-define=col,CS,deltaNegative$name rec chs ln 5 8 / - c1 * sMax /" \
    "-process=CS,integ,decayRate,functionOf=s" \
    "-define=param,bremsstrahlungLifetime,decayRate rec 3600 /,units=h" 
