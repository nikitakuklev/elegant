TOP = ../../..
include $(TOP)/config/CONFIG_APPS

CMPLR = ANSI
CC = $($(ANSI)_$(CMPLR))
#HOST_OPT = NO
#CC = quantify -cache-dir=/home/oxygen/BORLAND/.quantify-cache $($(ANSI)_$(CMPLR)) 
#CC = purify $($(ANSI)_$(CMPLR)) 

EPICS_EXTENSIONS_LIB = ../../../../../epics/extensions/lib/$(HOST_ARCH)
PROD = elegant sddsemitmeas madto sddssasefel sddsTouschekInteg ibsEmittance recurseSetup haissinski \
        sddsmatchtwiss sddsanalyzebeam sddsbrightness

USR_CFLAGS = 	-I../../../../../epics/extensions/src/SDDS/include \
		$(ZLIB_INC) \
		-I$(EPICS_EXTENSIONS_INCLUDE) \
		-DIEEE_MATH \
		$(ZLIB_CFLAG)

USR_CFLAGS_DEFAULT += 	-L../../../../../epics/extensions/lib/$(HOST_ARCH) \
			-DUNIX -DMINIMIZE_MEMORY

USR_CFLAGS_WIN32 = -nil-

PROD_LIBS = 	mdbcommon matlib fftpack SDDS1 \
		rpnlib mdbmth namelist mdblib \
		meschach $(ZLIB_PROD_LIB)
PROD_LIBS_WIN32 += fdlibm

ifeq ($(HOST_ARCH),solaris)
ACC_DEP_CFLAGS = -KPIC -v
CCC_DEP_CFLAGS = -KPIC -v
GCC_DEP_CFLAGS += -D__EXTENSIONS__
endif

SDDS1_DIR = $(EPICS_EXTENSIONS_LIB)
namelist_DIR = $(EPICS_EXTENSIONS_LIB)
fftpack_DIR = $(EPICS_EXTENSIONS_LIB)
mdbmth_DIR = $(EPICS_EXTENSIONS_LIB)
matlib_DIR = $(EPICS_EXTENSIONS_LIB)
mdblib_DIR = $(EPICS_EXTENSIONS_LIB)
mdbcommon_DIR = $(EPICS_EXTENSIONS_LIB)
rpnlib_DIR = $(EPICS_EXTENSIONS_LIB)
meschach_DIR = $(EPICS_EXTENSIONS_LIB)
fdlibm_DIR = $(EPICS_EXTENSIONS_LIB)

elegant_SRCS = 	alpha_data.c alpha_matrix.c amplif.c analyze.c aperture_search.c bend_matrix.c \
		bunched_beam.c cfgets.c check_duplic.c chrom.c closed_orbit.c compose_fn.c \
		compute_centroids.c compute_matrices.c concat_beamline.c concat_mat.c counter.c \
		copy_particles.c cormon_stats_output.c correct.c corrector_output.c csbend.c \
		do_tracking.c elegant.c error.c extend_list.c final_props.c find_elem.c floor.c \
		generate_bunch.c get_beamline.c kicker.c kick_poly.c kick_sbend.c \
		limit_amplitudes.c link_date.c link_elements.c load_parameters.c lorentz.c mad_parse.c \
		malign_mat.c matrix_output.c matrix.c matter.c motion.c multipole.c \
		orbtraj_output.c optimize.c output_magnets.c pepper_pot.c phase_reference.c \
		print_line.c quad_matrix.c ramp_momentum.c ramped_rfca.c response.c rfmode.c \
		run_rpnexpr.c sample.c sdds_beam.c sdds_support.c simple_rfca.c  subprocess.c \
		tune.c tilt_matrices.c trace.c track_data.c track_ramp.c track_rf.c trfmode.c \
		ztransverse.c twiss.c vary.c zlongit.c SReffects.c mod_rfca.c fitTraces.c \
		ibs_tracking.c zibs.c wake.c \
		trwake.c circles.c tubend.c sasefelmx.c sasefel.c alter.c \
		sliceAnalysis.c divideElements.c transmuteElements.c

sddsemitmeas_SRCS = sddsemitmeas.c

madto_SRCS = 	madto.c sdds_strength_output.c convert_to_parmela.c convert_to_patpet.c convert_to_matlab.c \
		convert_to_patricia.c convert_to_transport.c convert_to_xorbit.c track_data.c \
		get_beamline.c mad_parse.c output_magnets.c cfgets.c trace.c check_duplic.c \
		extend_list.c matrix.c compose_fn.c find_elem.c print_line.c divideElements.c \
		transmuteElements.c

sddssasefel_SRCS = sddssasefel.c sasefelmx.c

sddsTouschekInteg_SRCS = sddsTouschekInteg.c

ibsEmittance_SRCS = ibsEmittance.c zibs.c 

recurseSetup_SRCS = recurseSetup.c

haissinski_SRCS = haissinski.c

sddsmatchtwiss_SRCS = sddsmatchtwiss.c

sddsanalyzebeam_SRCS = sddsanalyzebeam.c

sddsbrightness_SRCS = sddsbrightness.c

fitTraces_CFLAGS = -I../../../../../epics/extensions/src/SDDS/meschach

include $(TOP)/config/RULES.Host

alter$(OBJ): alter.h

alter.h: ../alter.nl
	nlpp ../alter.nl alter.h

amplif$(OBJ): amplif.h

amplif.h: ../amplif.nl
	nlpp ../amplif.nl amplif.h

analyze$(OBJ): analyze.h

analyze.h: ../analyze.nl
	nlpp ../analyze.nl analyze.h

aperture_search$(OBJ): aperture_search.h

aperture_search.h: ../aperture_search.nl
	nlpp ../aperture_search.nl aperture_search.h

bunched_beam$(OBJ): bunched_beam.h

bunched_beam.h: ../bunched_beam.nl
	nlpp ../bunched_beam.nl bunched_beam.h

chrom$(OBJ): chrom.h

chrom.h: ../chrom.nl
	nlpp ../chrom.nl chrom.h

closed_orbit$(OBJ): closed_orbit.h

closed_orbit.h: ../closed_orbit.nl
	nlpp ../closed_orbit.nl closed_orbit.h

correct$(OBJ): correct.h steer_elem.h

correct.h: ../correct.nl
	nlpp ../correct.nl correct.h

divideElements$(OBJ): divideElements.h

divideElements.h: ../divideElements.nl
	nlpp ../divideElements.nl divideElements.h

transmuteElements$(OBJ): transmuteElements.h

transmuteElements.h: ../transmuteElements.nl
	nlpp ../transmuteElements.nl transmuteElements.h

elegant$(OBJ): elegant.h

elegant.h: ../elegant.nl
	nlpp ../elegant.nl elegant.h

error$(OBJ): error.h

error.h: ../error.nl
	nlpp ../error.nl error.h

floor$(OBJ): floor.h

floor.h: ../floor.nl
	nlpp ../floor.nl floor.h

link_elements$(OBJ): link_elements.h

link_elements.h: ../link_elements.nl
	nlpp ../link_elements.nl link_elements.h

load_parameters$(OBJ): load_parameters.h

load_parameters.h: ../load_parameters.nl
	nlpp ../load_parameters.nl load_parameters.h

matrix_output$(OBJ): matrix_output.h

matrix_output.h: ../matrix_output.nl
	nlpp ../matrix_output.nl matrix_output.h

optim_covariable$(OBJ): optim_covariable.h

optim_covariable.h: ../optim_covariable.nl
	nlpp ../optim_covariable.nl optim_covariable.h

optimize$(OBJ): optimize.h optim_covariable.h

optimize.h: ../optimize.nl
	nlpp ../optimize.nl optimize.h

response$(OBJ): response.h

response.h: ../response.nl
	nlpp ../response.nl response.h

run_rpnexpr$(OBJ): run_rpnexpr.h

run_rpnexpr.h: ../run_rpnexpr.nl
	nlpp ../run_rpnexpr.nl run_rpnexpr.h

sasefel$(OBJ): sasefel.h

sasefel.h: ../sasefel.nl
	nlpp ../sasefel.nl sasefel.h

get_beamline$(OBJ): save_lattice.h

save_lattice$(OBJ): save_lattice.h

save_lattice.h: ../save_lattice.nl
	nlpp ../save_lattice.nl save_lattice.h

sdds_beam$(OBJ): sdds_beam.h

sdds_beam.h: ../sdds_beam.nl
	nlpp ../sdds_beam.nl sdds_beam.h

sliceAnalysis$(OBJ): sliceAnalysis.h

sliceAnalysis.h: ../sliceAnalysis.nl
	nlpp ../sliceAnalysis.nl sliceAnalysis.h

steer_elem$(OBJ): steer_elem.h

steer_elem.h: ../steer_elem.nl
	nlpp ../steer_elem.nl steer_elem.h

subprocess$(OBJ): subprocess.h

subprocess.h: ../subprocess.nl
	nlpp ../subprocess.nl subprocess.h

trace$(OBJ): trace.h

trace.h: ../trace.nl
	nlpp ../trace.nl trace.h

tune$(OBJ): tune.h

tune.h: ../tune.nl
	nlpp ../tune.nl tune.h

twiss$(OBJ): twiss.h

twiss.h: ../twiss.nl
	nlpp ../twiss.nl twiss.h

vary$(OBJ): vary.h

vary.h: ../vary.nl
	nlpp ../vary.nl vary.h

fitTraces$(OBJ): fitTraces.h

fitTraces.h: ../fitTraces.nl
	nlpp ../fitTraces.nl fitTraces.h
